{
	"id": "894c48158a3c3c7a9cbf6c0df0f12ea9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/6_fallbacks_receive.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n/* ¿fallback() y receive()?\r\nmsg.data -> El calldata completo, que es un area no modificable y no persistente \r\n            en la que se almacenan los argumentos de la funcion y que se comporta \r\n            principalmente como la memoria.\r\n    Ether enviado al Smart Contract\r\n                    |\r\n              ¿msg.data vacio?\r\n                /            \\\r\n               si            no\r\n               /               \\\r\n       ¿existe receive()?     fallback()\r\n           /       \\\r\n          si       no\r\n          /          \\\r\n      receive()   fallback()\r\n*/"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"contracts/6_fallbacks_receive.sol": {
				"ast": {
					"absolutePath": "contracts/6_fallbacks_receive.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						}
					],
					"src": "35:605:0"
				},
				"id": 0
			}
		}
	}
}